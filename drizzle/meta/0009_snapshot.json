{
  "id": "6ad4a6c0-7dda-4968-86db-43f3dfc9e8d2",
  "prevId": "fd07abee-2afb-4d08-ba51-629e95f37021",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.areas": {
      "name": "areas",
      "schema": "",
      "columns": {
        "created_at": {
          "name": "created_at",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'area'"
        },
        "parent_fk": {
          "name": "parent_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "areas_parent_fk_areas_id_fk": {
          "name": "areas_parent_fk_areas_id_fk",
          "tableFrom": "areas",
          "tableTo": "areas",
          "columnsFrom": [
            "parent_fk"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read areas": {
          "name": "data.read can read areas",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access areas": {
          "name": "data.edit can fully access areas",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.ascents": {
      "name": "ascents",
      "schema": "",
      "columns": {
        "created_at": {
          "name": "created_at",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "date_time": {
          "name": "date_time",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "grade_fk": {
          "name": "grade_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "route_fk": {
          "name": "route_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can create ascents": {
          "name": "data.read can create ascents",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(SELECT authorize('data.read'))"
        },
        "data.read can read ascents": {
          "name": "data.read can read ascents",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.read can update their own ascents": {
          "name": "data.read can update their own ascents",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (SELECT 1 FROM public.users u WHERE u.id = created_by AND u.auth_user_fk = (SELECT auth.uid()))"
        },
        "data.edit can fully access ascents": {
          "name": "data.edit can fully access ascents",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.blocks": {
      "name": "blocks",
      "schema": "",
      "columns": {
        "created_at": {
          "name": "created_at",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "area_fk": {
          "name": "area_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "geolocation_fk": {
          "name": "geolocation_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read blocks": {
          "name": "data.read can read blocks",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access blocks": {
          "name": "data.edit can fully access blocks",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.files": {
      "name": "files",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "area_fk": {
          "name": "area_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ascent_fk": {
          "name": "ascent_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "route_fk": {
          "name": "route_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "block_fk": {
          "name": "block_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read files": {
          "name": "data.read can read files",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access files": {
          "name": "data.edit can fully access files",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.first_ascents": {
      "name": "first_ascents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "climber_name": {
          "name": "climber_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "year": {
          "name": "year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "route_fk": {
          "name": "route_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "climber_fk": {
          "name": "climber_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read first_ascents": {
          "name": "data.read can read first_ascents",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access first_ascents": {
          "name": "data.edit can fully access first_ascents",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.geolocations": {
      "name": "geolocations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "lat": {
          "name": "lat",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "long": {
          "name": "long",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "area_fk": {
          "name": "area_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "block_fk": {
          "name": "block_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read geolocations": {
          "name": "data.read can read geolocations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access geolocations": {
          "name": "data.edit can fully access geolocations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.grades": {
      "name": "grades",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "FB": {
          "name": "FB",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "V": {
          "name": "V",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.role_permissions": {
      "name": "role_permissions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "app_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "permission": {
          "name": "permission",
          "type": "app_permission",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow auth admin to read role_permissions": {
          "name": "Allow auth admin to read role_permissions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "supabase_auth_admin"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.route_external_resource_27crags": {
      "name": "route_external_resource_27crags",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "searchable_id": {
          "name": "searchable_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "searchable_type": {
          "name": "searchable_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country_name": {
          "name": "country_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location_name": {
          "name": "location_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "crag_id": {
          "name": "crag_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "latitude": {
          "name": "latitude",
          "type": "real",
          "primaryKey": false,
          "notNull": false
        },
        "longitude": {
          "name": "longitude",
          "type": "real",
          "primaryKey": false,
          "notNull": false
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_resources_fk": {
          "name": "external_resources_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read route_external_resource_27crags": {
          "name": "data.read can read route_external_resource_27crags",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access route_external_resource_27crags": {
          "name": "data.edit can fully access route_external_resource_27crags",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.route_external_resource_8a": {
      "name": "route_external_resource_8a",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "zlaggable_name": {
          "name": "zlaggable_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zlaggable_slug": {
          "name": "zlaggable_slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zlaggable_id": {
          "name": "zlaggable_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "crag_name": {
          "name": "crag_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "crag_slug": {
          "name": "crag_slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country_slug": {
          "name": "country_slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country_name": {
          "name": "country_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "area_name": {
          "name": "area_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "area_slug": {
          "name": "area_slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sector_name": {
          "name": "sector_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sector_slug": {
          "name": "sector_slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "grade_index": {
          "name": "grade_index",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "average_rating": {
          "name": "average_rating",
          "type": "real",
          "primaryKey": false,
          "notNull": false
        },
        "difficulty": {
          "name": "difficulty",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_resources_fk": {
          "name": "external_resources_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read route_external_resource_8a": {
          "name": "data.read can read route_external_resource_8a",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access route_external_resource_8a": {
          "name": "data.edit can fully access route_external_resource_8a",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.route_external_resource_the_crag": {
      "name": "route_external_resource_the_crag",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "grade": {
          "name": "grade",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "node": {
          "name": "node",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_resources_fk": {
          "name": "external_resources_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read route_external_resource_the_crag": {
          "name": "data.read can read route_external_resource_the_crag",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access route_external_resource_the_crag": {
          "name": "data.edit can fully access route_external_resource_the_crag",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.route_external_resources": {
      "name": "route_external_resources",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "route_fk": {
          "name": "route_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "external_resource_8a_fk": {
          "name": "external_resource_8a_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "external_resource_27crags_fk": {
          "name": "external_resource_27crags_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "external_resource_the_crag_fk": {
          "name": "external_resource_the_crag_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read route_external_resources": {
          "name": "data.read can read route_external_resources",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access route_external_resources": {
          "name": "data.edit can fully access route_external_resources",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.routes": {
      "name": "routes",
      "schema": "",
      "columns": {
        "created_at": {
          "name": "created_at",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "block_fk": {
          "name": "block_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "first_ascent_fk": {
          "name": "first_ascent_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "external_resources_fk": {
          "name": "external_resources_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "grade_fk": {
          "name": "grade_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read routes": {
          "name": "data.read can read routes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access routes": {
          "name": "data.edit can fully access routes",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.routes_to_tags": {
      "name": "routes_to_tags",
      "schema": "",
      "columns": {
        "route_fk": {
          "name": "route_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "tag_fk": {
          "name": "tag_fk",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "routes_to_tags_route_fk_routes_id_fk": {
          "name": "routes_to_tags_route_fk_routes_id_fk",
          "tableFrom": "routes_to_tags",
          "tableTo": "routes",
          "columnsFrom": [
            "route_fk"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "routes_to_tags_tag_fk_tags_id_fk": {
          "name": "routes_to_tags_tag_fk_tags_id_fk",
          "tableFrom": "routes_to_tags",
          "tableTo": "tags",
          "columnsFrom": [
            "tag_fk"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "routes_to_tags_route_fk_tag_fk_pk": {
          "name": "routes_to_tags_route_fk_tag_fk_pk",
          "columns": [
            "route_fk",
            "tag_fk"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "data.read can read routes_to_tags": {
          "name": "data.read can read routes_to_tags",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access routes_to_tags": {
          "name": "data.edit can fully access routes_to_tags",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.tags": {
      "name": "tags",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read tags": {
          "name": "data.read can read tags",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access tags": {
          "name": "data.edit can fully access tags",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.topo_routes": {
      "name": "topo_routes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "top_type": {
          "name": "top_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "route_fk": {
          "name": "route_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "topo_fk": {
          "name": "topo_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read topo_routes": {
          "name": "data.read can read topo_routes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access topo_routes": {
          "name": "data.edit can fully access topo_routes",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.topos": {
      "name": "topos",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "block_fk": {
          "name": "block_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "file_fk": {
          "name": "file_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read topos": {
          "name": "data.read can read topos",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        },
        "data.edit can fully access topos": {
          "name": "data.edit can fully access topos",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.edit'))",
          "withCheck": "(SELECT authorize('data.edit'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.user_roles": {
      "name": "user_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_fk": {
          "name": "user_fk",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "app_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow auth admin to read user_roles": {
          "name": "Allow auth admin to read user_roles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "supabase_auth_admin"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.user_settings": {
      "name": "user_settings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "auth_user_fk": {
          "name": "auth_user_fk",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_fk": {
          "name": "user_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "cookie_8a": {
          "name": "cookie_8a",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cookie_27crags": {
          "name": "cookie_27crags",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cookie_the_crag": {
          "name": "cookie_the_crag",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "grading_scale": {
          "name": "grading_scale",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'FB'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "users can create own users_settings": {
          "name": "users can create own users_settings",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(SELECT auth.uid()) = auth_user_fk"
        },
        "users can read own users_settings": {
          "name": "users can read own users_settings",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT auth.uid()) = auth_user_fk"
        },
        "users can update own users_settings": {
          "name": "users can update own users_settings",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT auth.uid()) = auth_user_fk"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "created_at": {
          "name": "created_at",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "auth_user_fk": {
          "name": "auth_user_fk",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_settings_fk": {
          "name": "user_settings_fk",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "data.read can read users": {
          "name": "data.read can read users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT authorize('data.read'))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {
    "public.app_permission": {
      "name": "app_permission",
      "schema": "public",
      "values": [
        "data.read",
        "data.edit"
      ]
    },
    "public.app_role": {
      "name": "app_role",
      "schema": "public",
      "values": [
        "user",
        "maintainer"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}